Search.setIndex({"docnames": ["data-flow", "index", "modules", "night_horizons", "night_horizons.container", "night_horizons.data_io", "night_horizons.exceptions", "night_horizons.image_processing", "night_horizons.image_processing.batch", "night_horizons.image_processing.mosaicking", "night_horizons.image_processing.operators", "night_horizons.image_processing.processors", "night_horizons.image_processing.registration", "night_horizons.image_processing.scorers", "night_horizons.io_manager", "night_horizons.metrics", "night_horizons.pipeline", "night_horizons.raster", "night_horizons.transformers", "night_horizons.transformers.filters", "night_horizons.transformers.order", "night_horizons.transformers.preprocessors", "night_horizons.transformers.raster", "night_horizons.utils"], "filenames": ["data-flow.rst", "index.rst", "modules.rst", "night_horizons.rst", "night_horizons.container.rst", "night_horizons.data_io.rst", "night_horizons.exceptions.rst", "night_horizons.image_processing.rst", "night_horizons.image_processing.batch.rst", "night_horizons.image_processing.mosaicking.rst", "night_horizons.image_processing.operators.rst", "night_horizons.image_processing.processors.rst", "night_horizons.image_processing.registration.rst", "night_horizons.image_processing.scorers.rst", "night_horizons.io_manager.rst", "night_horizons.metrics.rst", "night_horizons.pipeline.rst", "night_horizons.raster.rst", "night_horizons.transformers.rst", "night_horizons.transformers.filters.rst", "night_horizons.transformers.order.rst", "night_horizons.transformers.preprocessors.rst", "night_horizons.transformers.raster.rst", "night_horizons.utils.rst"], "titles": ["Data flow", "Welcome to night-horizons-mapmaker\u2019s documentation!", "night_horizons", "night_horizons package", "night_horizons.container module", "night_horizons.data_io module", "night_horizons.exceptions module", "night_horizons.image_processing package", "night_horizons.image_processing.batch module", "night_horizons.image_processing.mosaicking module", "night_horizons.image_processing.operators module", "night_horizons.image_processing.processors module", "night_horizons.image_processing.registration module", "night_horizons.image_processing.scorers module", "night_horizons.io_manager module", "night_horizons.metrics module", "night_horizons.pipeline module", "night_horizons.raster module", "night_horizons.transformers package", "night_horizons.transformers.filters module", "night_horizons.transformers.order module", "night_horizons.transformers.preprocessors module", "night_horizons.transformers.raster module", "night_horizons.utils module"], "terms": {"thi": [0, 4, 5, 8, 9, 11, 14, 16, 17, 20, 22, 23], "page": [0, 1], "contain": [0, 2, 3, 8, 14, 16, 21, 23], "nitelit": 0, "pipelin": [0, 2, 3, 9, 22, 23], "data": [1, 5, 8, 9, 11, 14, 17, 20, 21, 22, 23], "flow": 1, "index": 1, "modul": [1, 2], "search": 1, "packag": 2, "subpackag": 2, "image_process": [2, 3], "submodul": 2, "content": 2, "transform": [2, 3, 7, 8, 10, 11, 12], "dicontain": [2, 3, 4, 16], "data_io": [2, 3, 14, 17], "dataio": [2, 3, 5, 11, 14], "gdaldatasetio": [2, 3, 5, 17], "imageio": [2, 3, 5, 17], "registeredimageio": [2, 3, 5, 17], "tabulario": [2, 3, 5], "yamlio": [2, 3, 5], "except": [2, 3], "dstdarkframeerror": [2, 3, 6], "homographytransformerror": [2, 3, 6], "outofboundserror": [2, 3, 6], "srcdarkframeerror": [2, 3, 6], "io_manag": [2, 3, 9, 11, 13, 21, 23], "iomanag": [2, 3, 9, 14, 21], "mosaiciomanag": [2, 3, 14], "sequentialmosaiciomanag": [2, 3, 14], "trainmosaiciomanag": [2, 3, 14], "metric": [2, 3], "assert_approx_equ": [2, 3, 15], "image_to_image_ccoeff": [2, 3, 15], "metadataprocessor": [2, 3, 16], "mosaicmak": [2, 3, 16], "sequentialmosaicmak": [2, 3, 16], "stage": [2, 3, 16], "create_stag": [2, 3, 16], "raster": [2, 3, 18], "datasetwrapp": [2, 3, 17], "imag": [2, 3, 5, 9, 10, 11, 17, 21, 22, 23], "referencedimag": [2, 3, 17], "util": [2, 3, 9, 22], "loggermixin": [2, 3, 10, 11, 23], "looploggermixin": [2, 3, 8, 23], "referencedrawsplitt": [2, 3, 23], "stdoutlogg": [2, 3, 23], "check_column": [2, 3, 23], "check_df_input": [2, 3, 23], "check_filepaths_input": [2, 3, 23], "deep_merg": [2, 3, 23], "discover_data": [2, 3, 23], "enable_passthrough": [2, 3, 23], "get_dist": [2, 3, 23], "get_logg": [2, 3, 23], "get_method_paramet": [2, 3, 23], "load_imag": [2, 3, 23], "store_paramet": [2, 3, 23], "update_row": [2, 3, 23], "batch": [3, 7, 11], "batchprocessor": [3, 7, 8, 9], "mosaick": [3, 7], "sequentialmosaick": [3, 7, 9], "oper": [3, 7, 11, 13, 23], "baseimageoper": [3, 7, 10, 13], "imagealign": [3, 7, 10], "imagealignerblend": [3, 7, 10], "imageblend": [3, 7, 10], "imageprocessorqueu": [3, 7, 10], "processor": [3, 7, 8, 9, 13], "datasetprocessor": [3, 7, 11, 13], "datasetregistrar": [3, 7, 11], "datasetupdat": [3, 7, 11], "registr": [3, 7], "metadataimageregistrar": [3, 7, 12], "scorer": [3, 7, 8, 9], "datasetscor": [3, 7, 13], "referencedimagescor": [3, 7, 13], "similarityscoreoper": [3, 7, 13], "filter": [3, 18], "altitudefilt": [3, 18, 19], "queryfilt": [3, 18, 19], "steadyfilt": [3, 18, 19], "order": [3, 18], "ordertransform": [3, 18, 20], "sensoranddistanceord": [3, 18, 20], "preprocessor": [3, 18], "geotiffpreprocessor": [3, 18, 21], "nitelitepreprocessor": [3, 18, 21], "nitelitepreprocessor135": [3, 18, 21], "nitelitepreprocessor145": [3, 18, 21], "baseimagetransform": [3, 18, 22], "cleanimagetransform": [3, 18, 22], "logscaleimagetransform": [3, 18, 22], "passimagetransform": [3, 18, 22], "rastercoordinatetransform": [3, 18, 22], "get_default_arg": [3, 4], "get_servic": [3, 4], "get_used_arg": [3, 4], "parse_config": [3, 4], "register_dataio_servic": [3, 4], "register_servic": [3, 4], "save_config": [3, 4], "load": [3, 5, 14, 21, 23], "save": [3, 5, 14, 17], "convert": [3, 5], "creat": [3, 5, 23], "get_bounds_from_dataset": [3, 5], "load_from_viirs_hdf5": [3, 5], "name": [3, 4, 5, 9, 11, 17, 22, 23], "find_fil": [3, 14], "find_input_fil": [3, 14], "get_checkpoint_filepattern": [3, 14], "get_connect": [3, 14], "get_output_filepath": [3, 14], "load_from_checkpoint": [3, 14], "save_set": [3, 14], "save_to_checkpoint": [3, 14], "search_and_load_checkpoint": [3, 14], "search_for_checkpoint": [3, 14], "open_dataset": [3, 14], "run": [3, 16, 23], "register_default_preprocessor": [3, 16], "register_default_processor": [3, 16], "register_default_servic": [3, 16], "register_default_train_servic": [3, 16], "register_fundamental_servic": [3, 16], "valid": [3, 4, 8, 14, 16, 23], "get_imag": [3, 17], "io": [3, 11, 17], "open": [3, 5, 14, 17], "save_imag": [3, 17], "de": [3, 17], "get_featur": [3, 17], "get_img_int_from_img": [3, 17], "get_nonzero_mask": [3, 17], "get_pixel_coordin": [3, 17], "get_semitransparent_img": [3, 17], "get_semitransparent_img_int": [3, 17], "img": [3, 5, 10, 11, 17, 22], "img_int": [3, 17], "img_shap": [3, 5, 17, 23], "kp": [3, 11, 17], "plot_kp": [3, 17], "semitransparent_img": [3, 17], "semitransparent_img_int": [3, 17], "show": [3, 17], "add_to_folium_map": [3, 17], "cart_bound": [3, 17], "convert_cart_to_pixel": [3, 17], "convert_pixel_to_cart": [3, 17], "dataset_io": [3, 17], "get_bound": [3, 17], "get_cart_coordin": [3, 17], "get_pixel_width": [3, 17], "latlon_bound": [3, 17], "plot_bound": [3, 17], "set_project": [3, 17], "log": [3, 14, 21, 23], "start_log": [3, 23], "stop_log": [3, 23], "update_log": [3, 23], "write_log": [3, 23], "train_test_production_split": [3, 23], "flush": [3, 5, 23], "write": [3, 23], "class": [4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23], "config_filepath": [4, 16], "str": [4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23], "local_opt": [4, 16], "dict": [4, 8, 9, 10, 11, 12, 13, 14, 23], "base": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23], "object": [4, 8, 9, 10, 14, 16, 17, 22, 23], "constructor": [4, 23], "version": [4, 9, 22], "none": [4, 5, 8, 9, 10, 13, 14, 17, 19, 20, 21, 22, 23], "arg": [4, 5, 8, 9, 12, 13, 14, 17, 21, 23], "kwarg": [4, 5, 8, 9, 12, 13, 14, 17, 21, 23], "todo": [4, 5, 9, 11, 14, 16, 17, 20, 21, 23], "add": [4, 17, 19, 20], "config": 4, "goe": 4, "through": 4, "handl": [4, 17, 23], "some": [4, 9, 22], "singleton": [4, 16], "bool": [4, 5, 8, 9, 11, 12, 13, 15, 16, 17, 21, 22, 23], "fals": [4, 9, 12, 16, 17, 22, 23], "wrapped_constructor": 4, "filepath": [4, 5, 9, 14, 21, 23], "finish": 5, "implement": [5, 19, 20], "abc": [5, 10, 11], "abstract": [5, 10, 11, 14, 22], "static": [5, 10], "dataset": [5, 9, 11, 14, 17, 22], "target_cr": 5, "cr": [5, 9, 12, 13, 17, 21, 22, 23], "x_min": [5, 17, 22], "y_max": [5, 17, 22], "pixel_width": [5, 9, 17, 22], "pixel_height": [5, 9, 17, 22], "x_size": [5, 10, 11, 22], "y_size": [5, 10, 11, 22], "n_band": [5, 9, 17], "int": [5, 9, 10, 11, 13, 14, 17, 21, 23], "4": [5, 9, 17], "driver": 5, "mem": 5, "return_dataset": 5, "true": [5, 8, 9, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23], "option": [5, 8, 9, 17, 22, 23], "list": [5, 8, 9, 10, 11, 12, 13, 14, 21, 23], "tile": 5, "ye": 5, "tupl": [5, 8, 9, 14, 23], "ndarrai": [5, 10, 13, 15, 17, 21, 23], "float": [5, 9, 10, 12, 13, 17, 19, 21, 22, 23], "get": [5, 10, 11, 14, 23], "bound": [5, 10, 17], "given": [5, 8, 9, 14, 22], "coordin": [5, 9, 12, 17, 21, 22], "system": [5, 12, 21], "desir": 5, "x_bound": [5, 17], "x_max": [5, 17, 22], "target": [5, 8, 23], "y_bound": [5, 17], "y_min": [5, 17, 22], "mode": 5, "0": [5, 9, 10, 12, 13, 15, 17, 19, 20, 21, 22, 23], "output_filepath": [5, 14], "viir": 5, "hdf5": 5, "file": [5, 14], "path": [5, 14], "default": [5, 8, 9, 10, 17, 20, 21, 22, 23], "which": 5, "mean": 5, "us": [5, 8, 9, 12, 16, 17, 21, 22, 23], "gdal_dataset": 5, "gtiff": 5, "The": [5, 8, 9, 10, 17, 20, 21, 22, 23], "altern": 5, "i": [5, 8, 9, 10, 11, 13, 14, 16, 17, 20, 22, 23], "cach": 5, "re": [5, 23], "from": [5, 9, 11, 22, 23], "disk": [5, 23], "dtype": [5, 9, 11, 13, 17, 23], "type": [5, 23], "uint8": [5, 9, 11, 13, 17, 23], "1200": [5, 17, 23], "1920": [5, 17, 23], "an": [5, 8, 9, 11, 14, 16, 22, 23], "locat": [5, 21, 23], "datatyp": [5, 23], "integ": [5, 23], "255": [5, 23], "dimens": [5, 17], "raw": 5, "numpi": [5, 23], "arrai": [5, 17], "registered_imag": 5, "tabular": 5, "yaml": [5, 14], "valueerror": 6, "batch_process": [7, 8], "fit": [7, 8, 9, 11, 12, 18, 19, 20, 21, 22, 23], "postprocess": [7, 8, 9], "predict": [7, 8, 12], "preprocess": [7, 8, 9], "score": [7, 8, 12], "validate_readi": [7, 8], "get_search_zon": [7, 9], "set_fit_request": [7, 9, 18, 22], "apply_img_transform": [7, 10], "detect_and_comput": [7, 10], "find_homographi": [7, 10], "find_valid_homographi": [7, 10], "validate_bright": [7, 10], "validate_homographi": [7, 10], "validate_warp": [7, 10], "warp": [7, 10], "warp_bound": [7, 10], "blend": [7, 10], "get_dst": [7, 11, 13], "get_image_from_dataset": [7, 11], "get_src": [7, 11, 13], "save_image_to_dataset": [7, 11], "store_result": [7, 11, 13], "process": [7, 8, 11, 13, 17], "process_row": [7, 11], "safe_process": [7, 11], "score_sampl": [7, 12], "assert_equ": [7, 13], "log_kei": [8, 9, 10, 11, 13, 23], "ind": [8, 9], "return_cod": [8, 9], "passthrough": [8, 9, 12, 21, 23], "transformermixin": [8, 19, 20, 21, 22], "baseestim": [8, 12, 19, 20, 21, 22], "x": [8, 9, 10, 12, 17, 19, 20, 21, 22, 23], "datafram": [8, 9, 12, 20, 21, 23], "y": [8, 9, 10, 12, 17, 19, 20, 21, 22], "each": [8, 9, 21, 22, 23], "row": [8, 11, 13, 19, 23], "pd": [8, 9], "input": [8, 9, 23], "output": [8, 21, 23], "seri": [8, 9, 11, 12, 13, 14, 21, 23], "resourc": [8, 9, 11, 13], "method": [8, 9, 22, 23], "intend": [8, 9], "overwritten": [8, 9, 17], "subclass": [8, 9, 23], "A": [8, 9, 11, 23], "dictionari": [8, 9, 23], "addit": [8, 9, 17], "perform": [8, 12], "same": [8, 23], "here": 8, "empti": 8, "calcul": 8, "valu": [8, 11], "pre": 8, "notfittederror": 8, "If": [8, 23], "estim": [8, 9, 11, 19, 20, 22], "ha": [8, 9, 22, 23], "been": 8, "yet": 8, "epsg": [9, 12, 17, 21], "3857": [9, 12, 17, 21], "fill_valu": [9, 10], "outlin": [9, 10], "assembl": 9, "mosaic": [9, 14, 17], "georeferenc": [9, 12], "depend": [9, 23], "so": [9, 23], "realli": [9, 17, 23], "should": [9, 14, 22, 23], "call": [9, 17], "time": [9, 11], "x_t": 9, "requir": 9, "befor": 9, "do": [9, 11, 14], "full": [9, 14], "loop": 9, "focu": 9, "particular": 9, "e": [9, 22, 23], "g": [9, 22], "includ": [9, 11, 14, 21, 23], "put": 9, "pixel": [9, 17, 22], "frame": [9, 10, 11], "mosaicker_train": 9, "progress_images_subdir": 9, "progress_imag": [9, 14], "save_return_cod": [9, 11, 13], "memory_snapshot_freq": 9, "10": 9, "abs_det_m": [9, 10], "x_train": 9, "i_start": [9, 23], "checkpoint": [9, 14], "y_pred": [9, 14], "unchang": [9, 22], "request": [9, 22], "metadata": [9, 12, 16, 21, 22], "pass": [9, 14, 16, 17, 21, 22, 23], "note": [9, 14, 17, 22, 23], "onli": [9, 14, 22, 23], "relev": [9, 22], "enable_metadata_rout": [9, 22], "see": [9, 22], "sklearn": [9, 11, 22, 23], "set_config": [9, 22], "pleas": [9, 22], "user": [9, 20, 22, 23], "guid": [9, 22], "how": [9, 14, 22, 23], "rout": [9, 22], "mechan": [9, 22], "work": [9, 17, 22], "ar": [9, 16, 22, 23], "provid": [9, 21, 22], "ignor": [9, 22, 23], "meta": [9, 22], "rais": [9, 22], "error": [9, 14, 22], "alia": [9, 22], "instead": [9, 17, 19, 20, 22], "origin": [9, 22, 23], "metadata_rout": [9, 22], "retain": [9, 22], "exist": [9, 11, 14, 22, 23], "allow": [9, 22, 23], "you": [9, 22], "chang": [9, 22], "other": [9, 16, 17, 20, 22, 23], "new": [9, 11, 22], "1": [9, 10, 12, 17, 20, 21, 22, 23], "3": [9, 22], "sub": [9, 22], "insid": [9, 22], "otherwis": [9, 22], "effect": [9, 22], "self": [9, 22, 23], "updat": [9, 11, 22], "src_img": [10, 13, 15], "dst_img": [10, 13, 15], "feature_detector": 10, "feature_match": 10, "image_transform": 10, "det_min": 10, "6": 10, "det_max": 10, "2": [10, 12, 20, 23], "required_bright": 10, "03": [10, 22], "required_bright_pixel_area": 10, "50000": 10, "n_matches_us": 10, "500": 10, "homography_method": 10, "8": 10, "reproj_threshold": 10, "5": [10, 12, 13, 15, 21], "find_homography_opt": 10, "durat": [10, 11], "src_kp": [10, 11], "src_de": [10, 11], "dst_kp": 10, "dst_de": 10, "result": [10, 11, 13, 23], "m": [10, 11, 17, 23], "homographi": [10, 11], "keypoint": [10, 11], "src": [10, 11, 13], "descriptor": [10, 11], "error_typ": 10, "x_off": [10, 11, 22], "y_off": [10, 11, 22], "viabl": 10, "rang": 10, "destin": 10, "shape": 10, "direct": [10, 22], "sourc": 10, "variat": 10, "image_oper": [11, 13, 23], "use_safe_process": [11, 13], "refactor": [11, 23], "all": [11, 14], "extend": 11, "emploi": 11, "plural": 11, "enabl": 11, "more": [11, 16, 17, 23], "calc": 11, "dst": [11, 13], "could": [11, 14, 16], "probabl": [11, 23], "too": 11, "let": 11, "": [11, 14, 17, 23], "until": 11, "necessari": 11, "anoth": [11, 14], "thing": [11, 14, 23], "batch_processor": 11, "copi": 11, "over": 11, "we": [11, 16, 23], "mai": [11, 23], "abl": [11, 23], "rid": 11, "function": [11, 14, 17, 23], "gener": [11, 17], "speak": 11, "refer": [11, 12, 21], "our": 11, "wa": [11, 23], "just": [11, 23], "previou": 11, "better": [11, 17, 23], "than": [11, 23], "avail": 11, "sinc": 11, "don": [11, 22], "t": [11, 22, 23], "clarifi": 11, "what": [11, 14, 21, 23], "blended_img": 11, "combin": [11, 21], "Not": 11, "alwai": [11, 16], "spent": 11, "main": 12, "use_direct_estim": 12, "camera_angl": 12, "30": 12, "angle_error": 12, "padding_fract": [12, 21], "sensor": 12, "allow_res": [13, 15], "compare_nonzero": [13, 15], "tm_metric": [13, 15], "acceptance_threshold": 13, "99": 13, "input_dir": 14, "input_descript": 14, "output_dir": 14, "output_descript": 14, "root_dir": 14, "file_exist": 14, "tracked_file_kei": 14, "checkpoint_subdir": 14, "checkpoint_select": 14, "checkpoint_tag": 14, "_i": 14, "06d": 14, "checkpoint_freq": 14, "100": 14, "rel": 14, "identifi": [14, 23], "directori": [14, 23], "subdirectori": 14, "check": [14, 23], "act": 14, "accordingli": 14, "overwrit": 14, "etc": 14, "done": [14, 23], "read": [14, 23], "auxiliari": 14, "set": 14, "kinda": 14, "There": [14, 23], "wai": [14, 23], "specifi": 14, "need": [14, 16, 23], "hook": 14, "up": [14, 16, 20], "broken": 14, "inputfilemanag": 14, "outputfilemanag": 14, "dataiomanag": 14, "seem": 14, "like": 14, "overkil": 14, "extens": [14, 23], "pattern": [14, 23], "filetyp": [14, 23], "url": 14, "filenam": [14, 17], "obj": 14, "move": 14, "kei": 14, "csv": 14, "tiff": 14, "i_checkpoint": 14, "kind": 14, "awkard": 14, "one": [14, 21, 23], "conveni": [14, 17], "progress_images_dir": 14, "referenced_imag": 14, "img_ind": 14, "log_train": 14, "progress_images_dir_train": 14, "progress_images_train": 14, "settings_train": 14, "y_pred_train": 14, "img1": 15, "img2": 15, "r_accept": 15, "75": 15, "score_output": 16, "verbos": 16, "ll": 16, "want": [16, 23], "clean": [16, 23], "cost": 16, "flexibl": 16, "servic": 16, "almost": 16, "ubiquit": 16, "By": 16, "ensur": [16, 23], "onc": 16, "instanc": 16, "made": 16, "throughout": [16, 23], "without": 16, "explicitli": 16, "gdal": 17, "somewhat": 17, "defunct": 17, "wrapper": 17, "resolut": 17, "corner": 17, "where": 17, "overlap": 17, "matter": 17, "trim": [17, 22], "classmethod": 17, "properti": [17, 21, 23], "state": 17, "assess": 17, "principl": 17, "retriev": 17, "For": [17, 20], "fine": 17, "grain": 17, "control": 17, "get_img": 17, "first": [17, 20], "argument": [17, 23], "quick": 17, "access": 17, "veri": 17, "simpl": [17, 19, 20, 23], "fp": [17, 23], "ax": 17, "color": 17, "crs_transform": 17, "cmap": 17, "viridi": 17, "vmin": 17, "vmax": 17, "img_transform": 17, "downsampl": 17, "240": 17, "consist": [17, 20, 23], "imshow": 17, "becaus": [17, 23], "axi": 17, "increas": 17, "downward": 17, "old": 17, "scheme": 17, "transpos": 17, "posit": 17, "scale": 17, "cartesian": [17, 22], "return": 17, "cart_cr": 17, "latlon_cr": [17, 21], "4326": [17, 21], "label": 17, "referenc": 17, "include_corner_mark": 17, "folium": 17, "map": 17, "px": 17, "py": 17, "set_limit": 17, "limits_pad": 17, "img_kei": 17, "make": [17, 20, 23], "get_log": [18, 21], "load_gps_log": [18, 21], "load_img_log": [18, 21], "load_imu_log": [18, 21], "transform_imag": [18, 22], "check_bound": [18, 22], "fit_to_dataset": [18, 22], "handle_out_of_bound": [18, 22], "physical_to_pixel": [18, 22], "pixel_to_phys": [18, 22], "set_transform_request": [18, 22], "transform_to_phys": [18, 22], "transform_to_pixel": [18, 22], "column": [19, 20, 21, 23], "maltitud": 19, "float_altitud": 19, "13000": 19, "condit": 19, "appli": [19, 20], "easi": 19, "doe": [19, 20], "actual": [19, 20, 23], "remov": 19, "select": 19, "imugyromag": 19, "max_gyro": 19, "075": 19, "order_column": 20, "ascend": 20, "sensor_order_col": 20, "camera_num": 20, "sensor_order_map": 20, "coords_col": 20, "x_center": 20, "y_center": 20, "rearrang": 20, "indic": [20, 23], "take": 20, "center": 20, "train": 20, "sampl": 20, "break": 20, "multipl": 20, "individu": 20, "sens": 20, "someth": [20, 23], "expect": [20, 23], "experi": 20, "spatial_error": 21, "geotransform": 21, "output_column": 21, "n_features_": 21, "number": 21, "featur": 21, "use_cached_output": 21, "unhandled_fil": 21, "drop": [21, 23], "renam": 21, "metadatapreprocessor": 21, "img_log_fp": 21, "imu_log_fp": 21, "gps_log_fp": 21, "tz_offset_in_hr": 21, "differ": [21, 23], "img_log_df": 21, "imu_log_df": 21, "imu": 21, "gps_log_df": 21, "gp": 21, "log_df": 21, "init": 21, "fraction": 22, "physic": 22, "assum": 22, "distanc": 22, "pad": 22, "to_pixel": 22, "staticmethod": 23, "Will": 23, "decor": 23, "possibl": 23, "typic": 23, "interest": 23, "local": 23, "variabl": 23, "evalu": 23, "help": 23, "wors": 23, "when": 23, "debug": 23, "peek": 23, "ani": 23, "statist": 23, "approach": 23, "idea": 23, "would": 23, "blackbox": 23, "correl": 23, "success": 23, "poor": 23, "It": 23, "tempt": 23, "inject": 23, "practic": 23, "around": 23, "pervas": 23, "logger": 23, "lot": 23, "boilerpl": 23, "think": 23, "mixin": 23, "fly": 23, "store": 23, "memori": 23, "new_dict": 23, "log_filepath": 23, "view": 23, "treat": 23, "One": 23, "per": 23, "test_siz": 23, "max_train_s": 23, "random_st": 23, "randomst": 23, "use_test_dir": 23, "drop_raw_imag": 23, "fps_train": 23, "len": 23, "fps_test": 23, "subset": 23, "stdout": 23, "messag": 23, "required_column": 23, "have": 23, "right": 23, "being": 23, "possibli": 23, "reshap": 23, "orig_dict": 23, "delet": 23, "func": 23, "mayb": 23, "deprec": 23, "forgot": 23, "compos": 23, "columntransform": 23, "also": 23, "stuff": 23, "built": 23, "neither": 23, "consid": 23, "x_out": 23, "rule": 23, "keep": 23, "unalt": 23, "union": 23, "x1": 23, "y1": 23, "x2": 23, "y2": 23, "cl": 23, "method_nam": 23, "signatur": 23, "its": 23, "parent": 23, "try": 23, "figur": 23, "out": 23, "But": 23, "part": 23, "framework": 23, "can": 23, "subsum": 23, "automat": 23, "via": 23, "my_object": 23, "myclass": 23, "mani": 23, "readabl": 23, "maintain": 23, "v": 23, "them": 23, "super": 23, "__init__": 23, "directli": 23, "lean": 23, "toward": 23, "track": 23, "superclass": 23, "about": 23, "image_blend": 23, "callabl": 23, "wrap": 23, "df": 23, "incorpor": 23, "panda": 23, "enough": 23, "shouldn": 23, "remind": 23}, "objects": {"": [[3, 0, 0, "-", "night_horizons"]], "night_horizons": [[4, 0, 0, "-", "container"], [5, 0, 0, "-", "data_io"], [6, 0, 0, "-", "exceptions"], [7, 0, 0, "-", "image_processing"], [14, 0, 0, "-", "io_manager"], [15, 0, 0, "-", "metrics"], [16, 0, 0, "-", "pipeline"], [17, 0, 0, "-", "raster"], [18, 0, 0, "-", "transformers"], [23, 0, 0, "-", "utils"]], "night_horizons.container": [[4, 1, 1, "", "DIContainer"]], "night_horizons.container.DIContainer": [[4, 2, 1, "", "get_default_args"], [4, 2, 1, "", "get_service"], [4, 2, 1, "", "get_used_args"], [4, 2, 1, "", "parse_config"], [4, 2, 1, "", "register_dataio_services"], [4, 2, 1, "", "register_service"], [4, 2, 1, "", "save_config"]], "night_horizons.data_io": [[5, 1, 1, "", "DataIO"], [5, 1, 1, "", "GDALDatasetIO"], [5, 1, 1, "", "ImageIO"], [5, 1, 1, "", "RegisteredImageIO"], [5, 1, 1, "", "TabularIO"], [5, 1, 1, "", "YAMLIO"]], "night_horizons.data_io.DataIO": [[5, 2, 1, "", "load"], [5, 2, 1, "", "save"]], "night_horizons.data_io.GDALDatasetIO": [[5, 2, 1, "", "convert"], [5, 2, 1, "", "create"], [5, 2, 1, "", "get_bounds_from_dataset"], [5, 2, 1, "", "load"], [5, 2, 1, "", "load_from_viirs_hdf5"], [5, 3, 1, "", "name"], [5, 2, 1, "", "save"]], "night_horizons.data_io.ImageIO": [[5, 2, 1, "", "load"], [5, 3, 1, "", "name"], [5, 2, 1, "", "save"]], "night_horizons.data_io.RegisteredImageIO": [[5, 2, 1, "", "load"], [5, 3, 1, "", "name"], [5, 2, 1, "", "save"]], "night_horizons.data_io.TabularIO": [[5, 2, 1, "", "load"], [5, 3, 1, "", "name"], [5, 2, 1, "", "save"]], "night_horizons.data_io.YAMLIO": [[5, 2, 1, "", "load"], [5, 3, 1, "", "name"], [5, 2, 1, "", "save"]], "night_horizons.exceptions": [[6, 4, 1, "", "DstDarkFrameError"], [6, 4, 1, "", "HomographyTransformError"], [6, 4, 1, "", "OutOfBoundsError"], [6, 4, 1, "", "SrcDarkFrameError"]], "night_horizons.image_processing": [[8, 0, 0, "-", "batch"], [9, 0, 0, "-", "mosaicking"], [10, 0, 0, "-", "operators"], [11, 0, 0, "-", "processors"], [12, 0, 0, "-", "registration"], [13, 0, 0, "-", "scorers"]], "night_horizons.image_processing.batch": [[8, 1, 1, "", "BatchProcessor"]], "night_horizons.image_processing.batch.BatchProcessor": [[8, 2, 1, "", "batch_process"], [8, 2, 1, "", "fit"], [8, 2, 1, "", "postprocess"], [8, 2, 1, "", "predict"], [8, 2, 1, "", "preprocess"], [8, 2, 1, "", "score"], [8, 2, 1, "", "transform"], [8, 2, 1, "", "validate_readiness"]], "night_horizons.image_processing.mosaicking": [[9, 1, 1, "", "Mosaicker"], [9, 1, 1, "", "SequentialMosaicker"]], "night_horizons.image_processing.mosaicking.Mosaicker": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "postprocess"], [9, 2, 1, "", "preprocess"]], "night_horizons.image_processing.mosaicking.SequentialMosaicker": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "get_search_zone"], [9, 2, 1, "", "postprocess"], [9, 2, 1, "", "preprocess"], [9, 2, 1, "", "set_fit_request"]], "night_horizons.image_processing.operators": [[10, 1, 1, "", "BaseImageOperator"], [10, 1, 1, "", "ImageAligner"], [10, 1, 1, "", "ImageAlignerBlender"], [10, 1, 1, "", "ImageBlender"], [10, 1, 1, "", "ImageProcessorQueue"]], "night_horizons.image_processing.operators.BaseImageOperator": [[10, 2, 1, "", "operate"]], "night_horizons.image_processing.operators.ImageAligner": [[10, 2, 1, "", "apply_img_transform"], [10, 2, 1, "", "detect_and_compute"], [10, 2, 1, "", "find_homography"], [10, 2, 1, "", "find_valid_homography"], [10, 2, 1, "", "operate"], [10, 2, 1, "", "validate_brightness"], [10, 2, 1, "", "validate_homography"], [10, 2, 1, "", "validate_warp"], [10, 2, 1, "", "warp"], [10, 2, 1, "", "warp_bounds"]], "night_horizons.image_processing.operators.ImageAlignerBlender": [[10, 2, 1, "", "operate"]], "night_horizons.image_processing.operators.ImageBlender": [[10, 2, 1, "", "blend"], [10, 2, 1, "", "operate"]], "night_horizons.image_processing.operators.ImageProcessorQueue": [[10, 2, 1, "", "operate"]], "night_horizons.image_processing.processors": [[11, 1, 1, "", "DatasetProcessor"], [11, 1, 1, "", "DatasetRegistrar"], [11, 1, 1, "", "DatasetUpdater"], [11, 1, 1, "", "Processor"]], "night_horizons.image_processing.processors.DatasetProcessor": [[11, 2, 1, "", "get_dst"], [11, 2, 1, "", "get_image_from_dataset"], [11, 2, 1, "", "get_src"], [11, 2, 1, "", "save_image_to_dataset"]], "night_horizons.image_processing.processors.DatasetRegistrar": [[11, 2, 1, "", "store_results"]], "night_horizons.image_processing.processors.DatasetUpdater": [[11, 2, 1, "", "process"], [11, 2, 1, "", "store_results"]], "night_horizons.image_processing.processors.Processor": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "get_dst"], [11, 2, 1, "", "get_src"], [11, 2, 1, "", "process"], [11, 2, 1, "", "process_row"], [11, 2, 1, "", "safe_process"], [11, 2, 1, "", "store_results"]], "night_horizons.image_processing.registration": [[12, 1, 1, "", "MetadataImageRegistrar"]], "night_horizons.image_processing.registration.MetadataImageRegistrar": [[12, 2, 1, "", "fit"], [12, 2, 1, "", "predict"], [12, 2, 1, "", "score"], [12, 2, 1, "", "score_samples"], [12, 2, 1, "", "transform"]], "night_horizons.image_processing.scorers": [[13, 1, 1, "", "DatasetScorer"], [13, 1, 1, "", "ReferencedImageScorer"], [13, 1, 1, "", "SimilarityScoreOperator"]], "night_horizons.image_processing.scorers.DatasetScorer": [[13, 2, 1, "", "process"], [13, 2, 1, "", "store_results"]], "night_horizons.image_processing.scorers.ReferencedImageScorer": [[13, 2, 1, "", "get_dst"], [13, 2, 1, "", "get_src"], [13, 2, 1, "", "process"], [13, 2, 1, "", "store_results"]], "night_horizons.image_processing.scorers.SimilarityScoreOperator": [[13, 2, 1, "", "assert_equal"], [13, 2, 1, "", "operate"]], "night_horizons.io_manager": [[14, 1, 1, "", "IOManager"], [14, 1, 1, "", "MosaicIOManager"], [14, 1, 1, "", "SequentialMosaicIOManager"], [14, 1, 1, "", "TrainMosaicIOManager"]], "night_horizons.io_manager.IOManager": [[14, 2, 1, "", "find_files"], [14, 2, 1, "", "find_input_files"], [14, 2, 1, "", "get_checkpoint_filepatterns"], [14, 2, 1, "", "get_connection"], [14, 2, 1, "", "get_output_filepaths"], [14, 2, 1, "", "load_from_checkpoint"], [14, 2, 1, "", "save_settings"], [14, 2, 1, "", "save_to_checkpoint"], [14, 2, 1, "", "search_and_load_checkpoint"], [14, 2, 1, "", "search_for_checkpoint"]], "night_horizons.io_manager.MosaicIOManager": [[14, 2, 1, "", "load_from_checkpoint"], [14, 2, 1, "", "open_dataset"], [14, 2, 1, "", "save_to_checkpoint"]], "night_horizons.metrics": [[15, 5, 1, "", "assert_approx_equal"], [15, 5, 1, "", "image_to_image_ccoeff"]], "night_horizons.pipeline": [[16, 1, 1, "", "MetadataProcessor"], [16, 1, 1, "", "MosaicMaker"], [16, 1, 1, "", "SequentialMosaicMaker"], [16, 1, 1, "", "Stage"], [16, 5, 1, "", "create_stage"]], "night_horizons.pipeline.MetadataProcessor": [[16, 2, 1, "", "run"]], "night_horizons.pipeline.MosaicMaker": [[16, 2, 1, "", "register_default_preprocessors"], [16, 2, 1, "", "register_default_processors"], [16, 2, 1, "", "register_default_services"], [16, 2, 1, "", "run"]], "night_horizons.pipeline.SequentialMosaicMaker": [[16, 2, 1, "", "register_default_preprocessors"], [16, 2, 1, "", "register_default_processors"], [16, 2, 1, "", "register_default_services"], [16, 2, 1, "", "register_default_train_services"], [16, 2, 1, "", "run"]], "night_horizons.pipeline.Stage": [[16, 2, 1, "", "register_default_services"], [16, 2, 1, "", "register_fundamental_services"], [16, 2, 1, "", "validate"]], "night_horizons.raster": [[17, 1, 1, "", "DatasetWrapper"], [17, 1, 1, "", "Image"], [17, 1, 1, "", "ReferencedImage"]], "night_horizons.raster.DatasetWrapper": [[17, 2, 1, "", "get_image"], [17, 3, 1, "", "io"], [17, 2, 1, "", "open"], [17, 2, 1, "", "save_image"]], "night_horizons.raster.Image": [[17, 6, 1, "", "des"], [17, 2, 1, "", "get_features"], [17, 2, 1, "", "get_img_int_from_img"], [17, 2, 1, "", "get_nonzero_mask"], [17, 2, 1, "", "get_pixel_coordinates"], [17, 2, 1, "", "get_semitransparent_img"], [17, 2, 1, "", "get_semitransparent_img_int"], [17, 6, 1, "", "img"], [17, 6, 1, "", "img_int"], [17, 6, 1, "", "img_shape"], [17, 3, 1, "", "io"], [17, 6, 1, "", "kp"], [17, 2, 1, "", "open"], [17, 2, 1, "", "plot_kp"], [17, 2, 1, "", "save"], [17, 6, 1, "", "semitransparent_img"], [17, 6, 1, "", "semitransparent_img_int"], [17, 2, 1, "", "show"]], "night_horizons.raster.ReferencedImage": [[17, 2, 1, "", "add_to_folium_map"], [17, 6, 1, "", "cart_bounds"], [17, 2, 1, "", "convert_cart_to_pixel"], [17, 2, 1, "", "convert_pixel_to_cart"], [17, 3, 1, "", "dataset_io"], [17, 2, 1, "", "get_bounds"], [17, 2, 1, "", "get_cart_coordinates"], [17, 2, 1, "", "get_pixel_coordinates"], [17, 2, 1, "", "get_pixel_widths"], [17, 6, 1, "", "img_shape"], [17, 3, 1, "", "io"], [17, 6, 1, "", "latlon_bounds"], [17, 2, 1, "", "open"], [17, 2, 1, "", "plot_bounds"], [17, 2, 1, "", "plot_kp"], [17, 2, 1, "", "save"], [17, 2, 1, "", "set_projections"], [17, 2, 1, "", "show"]], "night_horizons.transformers": [[19, 0, 0, "-", "filters"], [20, 0, 0, "-", "order"], [21, 0, 0, "-", "preprocessors"], [22, 0, 0, "-", "raster"]], "night_horizons.transformers.filters": [[19, 1, 1, "", "AltitudeFilter"], [19, 1, 1, "", "Filter"], [19, 1, 1, "", "QueryFilter"], [19, 1, 1, "", "SteadyFilter"]], "night_horizons.transformers.filters.Filter": [[19, 2, 1, "", "fit"], [19, 2, 1, "", "transform"]], "night_horizons.transformers.filters.QueryFilter": [[19, 2, 1, "", "fit"], [19, 2, 1, "", "transform"]], "night_horizons.transformers.order": [[20, 1, 1, "", "OrderTransformer"], [20, 1, 1, "", "SensorAndDistanceOrder"]], "night_horizons.transformers.order.OrderTransformer": [[20, 2, 1, "", "fit"], [20, 2, 1, "", "transform"]], "night_horizons.transformers.order.SensorAndDistanceOrder": [[20, 2, 1, "", "fit"], [20, 2, 1, "", "transform"]], "night_horizons.transformers.preprocessors": [[21, 1, 1, "", "GeoTIFFPreprocessor"], [21, 1, 1, "", "NITELitePreprocessor"], [21, 1, 1, "", "NITELitePreprocessor135"], [21, 1, 1, "", "NITELitePreprocessor145"]], "night_horizons.transformers.preprocessors.GeoTIFFPreprocessor": [[21, 2, 1, "", "fit"], [21, 2, 1, "", "transform"]], "night_horizons.transformers.preprocessors.NITELitePreprocessor": [[21, 2, 1, "", "fit"], [21, 2, 1, "", "get_logs"], [21, 2, 1, "", "transform"]], "night_horizons.transformers.preprocessors.NITELitePreprocessor135": [[21, 2, 1, "", "load_gps_log"], [21, 2, 1, "", "load_img_log"], [21, 2, 1, "", "load_imu_log"]], "night_horizons.transformers.preprocessors.NITELitePreprocessor145": [[21, 2, 1, "", "load_gps_log"], [21, 2, 1, "", "load_img_log"], [21, 2, 1, "", "load_imu_log"]], "night_horizons.transformers.raster": [[22, 1, 1, "", "BaseImageTransformer"], [22, 1, 1, "", "CleanImageTransformer"], [22, 1, 1, "", "LogscaleImageTransformer"], [22, 1, 1, "", "PassImageTransformer"], [22, 1, 1, "", "RasterCoordinateTransformer"]], "night_horizons.transformers.raster.BaseImageTransformer": [[22, 2, 1, "", "fit"], [22, 2, 1, "", "transform"], [22, 2, 1, "", "transform_image"]], "night_horizons.transformers.raster.CleanImageTransformer": [[22, 2, 1, "", "transform_image"]], "night_horizons.transformers.raster.LogscaleImageTransformer": [[22, 2, 1, "", "transform_image"]], "night_horizons.transformers.raster.PassImageTransformer": [[22, 2, 1, "", "transform_image"]], "night_horizons.transformers.raster.RasterCoordinateTransformer": [[22, 2, 1, "", "check_bounds"], [22, 2, 1, "", "fit"], [22, 2, 1, "", "fit_to_dataset"], [22, 2, 1, "", "handle_out_of_bounds"], [22, 2, 1, "", "physical_to_pixel"], [22, 2, 1, "", "pixel_to_physical"], [22, 2, 1, "", "set_fit_request"], [22, 2, 1, "", "set_transform_request"], [22, 2, 1, "", "transform"], [22, 2, 1, "", "transform_to_physical"], [22, 2, 1, "", "transform_to_pixel"]], "night_horizons.utils": [[23, 1, 1, "", "LoggerMixin"], [23, 1, 1, "", "LoopLoggerMixin"], [23, 1, 1, "", "ReferencedRawSplitter"], [23, 1, 1, "", "StdoutLogger"], [23, 5, 1, "", "check_columns"], [23, 5, 1, "", "check_df_input"], [23, 5, 1, "", "check_filepaths_input"], [23, 5, 1, "", "deep_merge"], [23, 5, 1, "", "discover_data"], [23, 5, 1, "", "enable_passthrough"], [23, 5, 1, "", "get_distance"], [23, 5, 1, "", "get_logger"], [23, 5, 1, "", "get_method_parameters"], [23, 5, 1, "", "load_image"], [23, 5, 1, "", "store_parameters"], [23, 5, 1, "", "update_row"]], "night_horizons.utils.LoggerMixin": [[23, 6, 1, "", "log"], [23, 2, 1, "", "start_logging"], [23, 2, 1, "", "stop_logging"], [23, 2, 1, "", "update_log"]], "night_horizons.utils.LoopLoggerMixin": [[23, 2, 1, "", "start_logging"], [23, 2, 1, "", "write_log"]], "night_horizons.utils.ReferencedRawSplitter": [[23, 2, 1, "", "train_test_production_split"]], "night_horizons.utils.StdoutLogger": [[23, 2, 1, "", "flush"], [23, 2, 1, "", "write"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"data": 0, "flow": 0, "welcom": 1, "night": 1, "horizon": 1, "mapmak": 1, "": 1, "document": 1, "content": [1, 3, 7, 18], "indic": 1, "tabl": 1, "night_horizon": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "packag": [3, 7, 18], "subpackag": 3, "submodul": [3, 7, 18], "modul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "contain": 4, "paramet": [4, 5, 8, 9, 10, 11, 12, 14, 16, 19, 20, 21, 22, 23], "return": [4, 5, 8, 9, 10, 11, 14, 16, 19, 20, 21, 22, 23], "data_io": 5, "except": 6, "image_process": [7, 8, 9, 10, 11, 12, 13], "batch": 8, "rais": 8, "mosaick": 9, "oper": 10, "processor": 11, "registr": 12, "scorer": 13, "io_manag": 14, "metric": 15, "pipelin": 16, "raster": [17, 22], "transform": [18, 19, 20, 21, 22], "filter": 19, "order": 20, "preprocessor": 21, "attribut": [21, 23], "util": 23, "modifi": 23, "requir": 23}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Data flow": [[0, "data-flow"]], "Welcome to night-horizons-mapmaker\u2019s documentation!": [[1, "welcome-to-night-horizons-mapmaker-s-documentation"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "night_horizons": [[2, "night-horizons"]], "night_horizons package": [[3, "night-horizons-package"]], "Subpackages": [[3, "subpackages"]], "Submodules": [[3, "submodules"], [7, "submodules"], [18, "submodules"]], "Module contents": [[3, "module-night_horizons"], [7, "module-night_horizons.image_processing"], [18, "module-night_horizons.transformers"]], "night_horizons.container module": [[4, "module-night_horizons.container"]], "Parameters": [[4, "parameters"], [5, "parameters"], [5, "id1"], [5, "id3"], [8, "parameters"], [8, "id1"], [8, "id3"], [8, "id5"], [8, "id7"], [8, "id9"], [9, "parameters"], [9, "id1"], [9, "id3"], [9, "id5"], [9, "id7"], [9, "id9"], [10, "parameters"], [10, "id1"], [10, "id3"], [11, "parameters"], [11, "id1"], [11, "id3"], [11, "id5"], [11, "id7"], [12, "parameters"], [14, "parameters"], [14, "id1"], [14, "id3"], [16, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [21, "id1"], [21, "id3"], [21, "id4"], [21, "id5"], [22, "parameters"], [22, "id1"], [22, "id3"], [22, "id5"], [22, "id7"], [23, "parameters"], [23, "id1"], [23, "id3"], [23, "id5"], [23, "id7"], [23, "id9"], [23, "id11"], [23, "id13"], [23, "id15"], [23, "id17"], [23, "id23"], [23, "id24"]], "Returns": [[4, "returns"], [5, "returns"], [5, "id2"], [5, "id4"], [8, "returns"], [8, "id2"], [8, "id4"], [8, "id6"], [8, "id8"], [8, "id10"], [9, "returns"], [9, "id2"], [9, "id4"], [9, "id6"], [9, "id8"], [9, "id10"], [10, "returns"], [10, "id2"], [10, "id4"], [11, "returns"], [11, "id2"], [11, "id4"], [11, "id6"], [11, "id8"], [14, "returns"], [14, "id2"], [14, "id4"], [16, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [22, "id2"], [22, "id4"], [22, "id6"], [22, "id8"], [23, "returns"], [23, "id2"], [23, "id4"], [23, "id6"], [23, "id8"], [23, "id10"], [23, "id12"], [23, "id14"], [23, "id16"], [23, "id18"], [23, "id25"]], "night_horizons.data_io module": [[5, "module-night_horizons.data_io"]], "night_horizons.exceptions module": [[6, "module-night_horizons.exceptions"]], "night_horizons.image_processing package": [[7, "night-horizons-image-processing-package"]], "night_horizons.image_processing.batch module": [[8, "module-night_horizons.image_processing.batch"]], "Raises": [[8, "raises"]], "night_horizons.image_processing.mosaicking module": [[9, "module-night_horizons.image_processing.mosaicking"]], "night_horizons.image_processing.operators module": [[10, "module-night_horizons.image_processing.operators"]], "night_horizons.image_processing.processors module": [[11, "module-night_horizons.image_processing.processors"]], "night_horizons.image_processing.registration module": [[12, "module-night_horizons.image_processing.registration"]], "night_horizons.image_processing.scorers module": [[13, "module-night_horizons.image_processing.scorers"]], "night_horizons.io_manager module": [[14, "module-night_horizons.io_manager"]], "night_horizons.metrics module": [[15, "module-night_horizons.metrics"]], "night_horizons.pipeline module": [[16, "module-night_horizons.pipeline"]], "night_horizons.raster module": [[17, "module-night_horizons.raster"]], "night_horizons.transformers package": [[18, "night-horizons-transformers-package"]], "night_horizons.transformers.filters module": [[19, "module-night_horizons.transformers.filters"]], "night_horizons.transformers.order module": [[20, "module-night_horizons.transformers.order"]], "night_horizons.transformers.preprocessors module": [[21, "module-night_horizons.transformers.preprocessors"]], "Attributes": [[21, "attributes"], [21, "id2"]], "night_horizons.transformers.raster module": [[22, "module-night_horizons.transformers.raster"]], "night_horizons.utils module": [[23, "module-night_horizons.utils"]], "Attributes Modified": [[23, "attributes-modified"]], "Requires": [[23, "requires"]]}, "indexentries": {"module": [[3, "module-night_horizons"], [4, "module-night_horizons.container"], [5, "module-night_horizons.data_io"], [6, "module-night_horizons.exceptions"], [7, "module-night_horizons.image_processing"], [8, "module-night_horizons.image_processing.batch"], [9, "module-night_horizons.image_processing.mosaicking"], [10, "module-night_horizons.image_processing.operators"], [11, "module-night_horizons.image_processing.processors"], [12, "module-night_horizons.image_processing.registration"], [13, "module-night_horizons.image_processing.scorers"], [14, "module-night_horizons.io_manager"], [15, "module-night_horizons.metrics"], [16, "module-night_horizons.pipeline"], [17, "module-night_horizons.raster"], [18, "module-night_horizons.transformers"], [19, "module-night_horizons.transformers.filters"], [20, "module-night_horizons.transformers.order"], [21, "module-night_horizons.transformers.preprocessors"], [22, "module-night_horizons.transformers.raster"], [23, "module-night_horizons.utils"]], "night_horizons": [[3, "module-night_horizons"]], "dicontainer (class in night_horizons.container)": [[4, "night_horizons.container.DIContainer"]], "get_default_args() (night_horizons.container.dicontainer method)": [[4, "night_horizons.container.DIContainer.get_default_args"]], "get_service() (night_horizons.container.dicontainer method)": [[4, "night_horizons.container.DIContainer.get_service"]], "get_used_args() (night_horizons.container.dicontainer method)": [[4, "night_horizons.container.DIContainer.get_used_args"]], "night_horizons.container": [[4, "module-night_horizons.container"]], "parse_config() (night_horizons.container.dicontainer method)": [[4, "night_horizons.container.DIContainer.parse_config"]], "register_dataio_services() (night_horizons.container.dicontainer method)": [[4, "night_horizons.container.DIContainer.register_dataio_services"]], "register_service() (night_horizons.container.dicontainer method)": [[4, "night_horizons.container.DIContainer.register_service"]], "save_config() (night_horizons.container.dicontainer method)": [[4, "night_horizons.container.DIContainer.save_config"]], "dataio (class in night_horizons.data_io)": [[5, "night_horizons.data_io.DataIO"]], "gdaldatasetio (class in night_horizons.data_io)": [[5, "night_horizons.data_io.GDALDatasetIO"]], "imageio (class in night_horizons.data_io)": [[5, "night_horizons.data_io.ImageIO"]], "registeredimageio (class in night_horizons.data_io)": [[5, "night_horizons.data_io.RegisteredImageIO"]], "tabulario (class in night_horizons.data_io)": [[5, "night_horizons.data_io.TabularIO"]], "yamlio (class in night_horizons.data_io)": [[5, "night_horizons.data_io.YAMLIO"]], "convert() (night_horizons.data_io.gdaldatasetio static method)": [[5, "night_horizons.data_io.GDALDatasetIO.convert"]], "create() (night_horizons.data_io.gdaldatasetio static method)": [[5, "night_horizons.data_io.GDALDatasetIO.create"]], "get_bounds_from_dataset() (night_horizons.data_io.gdaldatasetio static method)": [[5, "night_horizons.data_io.GDALDatasetIO.get_bounds_from_dataset"]], "load() (night_horizons.data_io.dataio method)": [[5, "night_horizons.data_io.DataIO.load"]], "load() (night_horizons.data_io.gdaldatasetio static method)": [[5, "night_horizons.data_io.GDALDatasetIO.load"]], "load() (night_horizons.data_io.imageio static method)": [[5, "night_horizons.data_io.ImageIO.load"]], "load() (night_horizons.data_io.registeredimageio static method)": [[5, "night_horizons.data_io.RegisteredImageIO.load"]], "load() (night_horizons.data_io.tabulario static method)": [[5, "night_horizons.data_io.TabularIO.load"]], "load() (night_horizons.data_io.yamlio static method)": [[5, "night_horizons.data_io.YAMLIO.load"]], "load_from_viirs_hdf5() (night_horizons.data_io.gdaldatasetio static method)": [[5, "night_horizons.data_io.GDALDatasetIO.load_from_viirs_hdf5"]], "name (night_horizons.data_io.gdaldatasetio attribute)": [[5, "night_horizons.data_io.GDALDatasetIO.name"]], "name (night_horizons.data_io.imageio attribute)": [[5, "night_horizons.data_io.ImageIO.name"]], "name (night_horizons.data_io.registeredimageio attribute)": [[5, "night_horizons.data_io.RegisteredImageIO.name"]], "name (night_horizons.data_io.tabulario attribute)": [[5, "night_horizons.data_io.TabularIO.name"]], "name (night_horizons.data_io.yamlio attribute)": [[5, "night_horizons.data_io.YAMLIO.name"]], "night_horizons.data_io": [[5, "module-night_horizons.data_io"]], "save() (night_horizons.data_io.dataio method)": [[5, "night_horizons.data_io.DataIO.save"]], "save() (night_horizons.data_io.gdaldatasetio static method)": [[5, "night_horizons.data_io.GDALDatasetIO.save"]], "save() (night_horizons.data_io.imageio static method)": [[5, "night_horizons.data_io.ImageIO.save"]], "save() (night_horizons.data_io.registeredimageio static method)": [[5, "night_horizons.data_io.RegisteredImageIO.save"]], "save() (night_horizons.data_io.tabulario static method)": [[5, "night_horizons.data_io.TabularIO.save"]], "save() (night_horizons.data_io.yamlio static method)": [[5, "night_horizons.data_io.YAMLIO.save"]], "dstdarkframeerror": [[6, "night_horizons.exceptions.DstDarkFrameError"]], "homographytransformerror": [[6, "night_horizons.exceptions.HomographyTransformError"]], "outofboundserror": [[6, "night_horizons.exceptions.OutOfBoundsError"]], "srcdarkframeerror": [[6, "night_horizons.exceptions.SrcDarkFrameError"]], "night_horizons.exceptions": [[6, "module-night_horizons.exceptions"]], "night_horizons.image_processing": [[7, "module-night_horizons.image_processing"]], "batchprocessor (class in night_horizons.image_processing.batch)": [[8, "night_horizons.image_processing.batch.BatchProcessor"]], "batch_process() (night_horizons.image_processing.batch.batchprocessor method)": [[8, "night_horizons.image_processing.batch.BatchProcessor.batch_process"]], "fit() (night_horizons.image_processing.batch.batchprocessor method)": [[8, "night_horizons.image_processing.batch.BatchProcessor.fit"]], "night_horizons.image_processing.batch": [[8, "module-night_horizons.image_processing.batch"]], "postprocess() (night_horizons.image_processing.batch.batchprocessor method)": [[8, "night_horizons.image_processing.batch.BatchProcessor.postprocess"]], "predict() (night_horizons.image_processing.batch.batchprocessor method)": [[8, "night_horizons.image_processing.batch.BatchProcessor.predict"]], "preprocess() (night_horizons.image_processing.batch.batchprocessor method)": [[8, "night_horizons.image_processing.batch.BatchProcessor.preprocess"]], "score() (night_horizons.image_processing.batch.batchprocessor method)": [[8, "night_horizons.image_processing.batch.BatchProcessor.score"]], "transform() (night_horizons.image_processing.batch.batchprocessor method)": [[8, "night_horizons.image_processing.batch.BatchProcessor.transform"]], "validate_readiness() (night_horizons.image_processing.batch.batchprocessor method)": [[8, "night_horizons.image_processing.batch.BatchProcessor.validate_readiness"]], "mosaicker (class in night_horizons.image_processing.mosaicking)": [[9, "night_horizons.image_processing.mosaicking.Mosaicker"]], "sequentialmosaicker (class in night_horizons.image_processing.mosaicking)": [[9, "night_horizons.image_processing.mosaicking.SequentialMosaicker"]], "fit() (night_horizons.image_processing.mosaicking.mosaicker method)": [[9, "night_horizons.image_processing.mosaicking.Mosaicker.fit"]], "fit() (night_horizons.image_processing.mosaicking.sequentialmosaicker method)": [[9, "night_horizons.image_processing.mosaicking.SequentialMosaicker.fit"]], "get_search_zone() (night_horizons.image_processing.mosaicking.sequentialmosaicker method)": [[9, "night_horizons.image_processing.mosaicking.SequentialMosaicker.get_search_zone"]], "night_horizons.image_processing.mosaicking": [[9, "module-night_horizons.image_processing.mosaicking"]], "postprocess() (night_horizons.image_processing.mosaicking.mosaicker method)": [[9, "night_horizons.image_processing.mosaicking.Mosaicker.postprocess"]], "postprocess() (night_horizons.image_processing.mosaicking.sequentialmosaicker method)": [[9, "night_horizons.image_processing.mosaicking.SequentialMosaicker.postprocess"]], "preprocess() (night_horizons.image_processing.mosaicking.mosaicker method)": [[9, "night_horizons.image_processing.mosaicking.Mosaicker.preprocess"]], "preprocess() (night_horizons.image_processing.mosaicking.sequentialmosaicker method)": [[9, "night_horizons.image_processing.mosaicking.SequentialMosaicker.preprocess"]], "set_fit_request() (night_horizons.image_processing.mosaicking.sequentialmosaicker method)": [[9, "night_horizons.image_processing.mosaicking.SequentialMosaicker.set_fit_request"]], "baseimageoperator (class in night_horizons.image_processing.operators)": [[10, "night_horizons.image_processing.operators.BaseImageOperator"]], "imagealigner (class in night_horizons.image_processing.operators)": [[10, "night_horizons.image_processing.operators.ImageAligner"]], "imagealignerblender (class in night_horizons.image_processing.operators)": [[10, "night_horizons.image_processing.operators.ImageAlignerBlender"]], "imageblender (class in night_horizons.image_processing.operators)": [[10, "night_horizons.image_processing.operators.ImageBlender"]], "imageprocessorqueue (class in night_horizons.image_processing.operators)": [[10, "night_horizons.image_processing.operators.ImageProcessorQueue"]], "apply_img_transform() (night_horizons.image_processing.operators.imagealigner method)": [[10, "night_horizons.image_processing.operators.ImageAligner.apply_img_transform"]], "blend() (night_horizons.image_processing.operators.imageblender method)": [[10, "night_horizons.image_processing.operators.ImageBlender.blend"]], "detect_and_compute() (night_horizons.image_processing.operators.imagealigner method)": [[10, "night_horizons.image_processing.operators.ImageAligner.detect_and_compute"]], "find_homography() (night_horizons.image_processing.operators.imagealigner method)": [[10, "night_horizons.image_processing.operators.ImageAligner.find_homography"]], "find_valid_homography() (night_horizons.image_processing.operators.imagealigner method)": [[10, "night_horizons.image_processing.operators.ImageAligner.find_valid_homography"]], "night_horizons.image_processing.operators": [[10, "module-night_horizons.image_processing.operators"]], "operate() (night_horizons.image_processing.operators.baseimageoperator method)": [[10, "night_horizons.image_processing.operators.BaseImageOperator.operate"]], "operate() (night_horizons.image_processing.operators.imagealigner method)": [[10, "night_horizons.image_processing.operators.ImageAligner.operate"]], "operate() (night_horizons.image_processing.operators.imagealignerblender method)": [[10, "night_horizons.image_processing.operators.ImageAlignerBlender.operate"]], "operate() (night_horizons.image_processing.operators.imageblender method)": [[10, "night_horizons.image_processing.operators.ImageBlender.operate"]], "operate() (night_horizons.image_processing.operators.imageprocessorqueue method)": [[10, "night_horizons.image_processing.operators.ImageProcessorQueue.operate"]], "validate_brightness() (night_horizons.image_processing.operators.imagealigner method)": [[10, "night_horizons.image_processing.operators.ImageAligner.validate_brightness"]], "validate_homography() (night_horizons.image_processing.operators.imagealigner method)": [[10, "night_horizons.image_processing.operators.ImageAligner.validate_homography"]], "validate_warp() (night_horizons.image_processing.operators.imagealigner method)": [[10, "night_horizons.image_processing.operators.ImageAligner.validate_warp"]], "warp() (night_horizons.image_processing.operators.imagealigner static method)": [[10, "night_horizons.image_processing.operators.ImageAligner.warp"]], "warp_bounds() (night_horizons.image_processing.operators.imagealigner static method)": [[10, "night_horizons.image_processing.operators.ImageAligner.warp_bounds"]], "datasetprocessor (class in night_horizons.image_processing.processors)": [[11, "night_horizons.image_processing.processors.DatasetProcessor"]], "datasetregistrar (class in night_horizons.image_processing.processors)": [[11, "night_horizons.image_processing.processors.DatasetRegistrar"]], "datasetupdater (class in night_horizons.image_processing.processors)": [[11, "night_horizons.image_processing.processors.DatasetUpdater"]], "processor (class in night_horizons.image_processing.processors)": [[11, "night_horizons.image_processing.processors.Processor"]], "fit() (night_horizons.image_processing.processors.processor method)": [[11, "night_horizons.image_processing.processors.Processor.fit"]], "get_dst() (night_horizons.image_processing.processors.datasetprocessor method)": [[11, "night_horizons.image_processing.processors.DatasetProcessor.get_dst"]], "get_dst() (night_horizons.image_processing.processors.processor method)": [[11, "night_horizons.image_processing.processors.Processor.get_dst"]], "get_image_from_dataset() (night_horizons.image_processing.processors.datasetprocessor method)": [[11, "night_horizons.image_processing.processors.DatasetProcessor.get_image_from_dataset"]], "get_src() (night_horizons.image_processing.processors.datasetprocessor method)": [[11, "night_horizons.image_processing.processors.DatasetProcessor.get_src"]], "get_src() (night_horizons.image_processing.processors.processor method)": [[11, "night_horizons.image_processing.processors.Processor.get_src"]], "night_horizons.image_processing.processors": [[11, "module-night_horizons.image_processing.processors"]], "process() (night_horizons.image_processing.processors.datasetupdater method)": [[11, "night_horizons.image_processing.processors.DatasetUpdater.process"]], "process() (night_horizons.image_processing.processors.processor method)": [[11, "night_horizons.image_processing.processors.Processor.process"]], "process_row() (night_horizons.image_processing.processors.processor method)": [[11, "night_horizons.image_processing.processors.Processor.process_row"]], "safe_process() (night_horizons.image_processing.processors.processor method)": [[11, "night_horizons.image_processing.processors.Processor.safe_process"]], "save_image_to_dataset() (night_horizons.image_processing.processors.datasetprocessor method)": [[11, "night_horizons.image_processing.processors.DatasetProcessor.save_image_to_dataset"]], "store_results() (night_horizons.image_processing.processors.datasetregistrar method)": [[11, "night_horizons.image_processing.processors.DatasetRegistrar.store_results"]], "store_results() (night_horizons.image_processing.processors.datasetupdater method)": [[11, "night_horizons.image_processing.processors.DatasetUpdater.store_results"]], "store_results() (night_horizons.image_processing.processors.processor method)": [[11, "night_horizons.image_processing.processors.Processor.store_results"]], "metadataimageregistrar (class in night_horizons.image_processing.registration)": [[12, "night_horizons.image_processing.registration.MetadataImageRegistrar"]], "fit() (night_horizons.image_processing.registration.metadataimageregistrar method)": [[12, "night_horizons.image_processing.registration.MetadataImageRegistrar.fit"]], "night_horizons.image_processing.registration": [[12, "module-night_horizons.image_processing.registration"]], "predict() (night_horizons.image_processing.registration.metadataimageregistrar method)": [[12, "night_horizons.image_processing.registration.MetadataImageRegistrar.predict"]], "score() (night_horizons.image_processing.registration.metadataimageregistrar method)": [[12, "night_horizons.image_processing.registration.MetadataImageRegistrar.score"]], "score_samples() (night_horizons.image_processing.registration.metadataimageregistrar method)": [[12, "night_horizons.image_processing.registration.MetadataImageRegistrar.score_samples"]], "transform() (night_horizons.image_processing.registration.metadataimageregistrar method)": [[12, "night_horizons.image_processing.registration.MetadataImageRegistrar.transform"]], "datasetscorer (class in night_horizons.image_processing.scorers)": [[13, "night_horizons.image_processing.scorers.DatasetScorer"]], "referencedimagescorer (class in night_horizons.image_processing.scorers)": [[13, "night_horizons.image_processing.scorers.ReferencedImageScorer"]], "similarityscoreoperator (class in night_horizons.image_processing.scorers)": [[13, "night_horizons.image_processing.scorers.SimilarityScoreOperator"]], "assert_equal() (night_horizons.image_processing.scorers.similarityscoreoperator method)": [[13, "night_horizons.image_processing.scorers.SimilarityScoreOperator.assert_equal"]], "get_dst() (night_horizons.image_processing.scorers.referencedimagescorer method)": [[13, "night_horizons.image_processing.scorers.ReferencedImageScorer.get_dst"]], "get_src() (night_horizons.image_processing.scorers.referencedimagescorer method)": [[13, "night_horizons.image_processing.scorers.ReferencedImageScorer.get_src"]], "night_horizons.image_processing.scorers": [[13, "module-night_horizons.image_processing.scorers"]], "operate() (night_horizons.image_processing.scorers.similarityscoreoperator method)": [[13, "night_horizons.image_processing.scorers.SimilarityScoreOperator.operate"]], "process() (night_horizons.image_processing.scorers.datasetscorer method)": [[13, "night_horizons.image_processing.scorers.DatasetScorer.process"]], "process() (night_horizons.image_processing.scorers.referencedimagescorer method)": [[13, "night_horizons.image_processing.scorers.ReferencedImageScorer.process"]], "store_results() (night_horizons.image_processing.scorers.datasetscorer method)": [[13, "night_horizons.image_processing.scorers.DatasetScorer.store_results"]], "store_results() (night_horizons.image_processing.scorers.referencedimagescorer method)": [[13, "night_horizons.image_processing.scorers.ReferencedImageScorer.store_results"]], "iomanager (class in night_horizons.io_manager)": [[14, "night_horizons.io_manager.IOManager"]], "mosaiciomanager (class in night_horizons.io_manager)": [[14, "night_horizons.io_manager.MosaicIOManager"]], "sequentialmosaiciomanager (class in night_horizons.io_manager)": [[14, "night_horizons.io_manager.SequentialMosaicIOManager"]], "trainmosaiciomanager (class in night_horizons.io_manager)": [[14, "night_horizons.io_manager.TrainMosaicIOManager"]], "find_files() (night_horizons.io_manager.iomanager method)": [[14, "night_horizons.io_manager.IOManager.find_files"]], "find_input_files() (night_horizons.io_manager.iomanager method)": [[14, "night_horizons.io_manager.IOManager.find_input_files"]], "get_checkpoint_filepatterns() (night_horizons.io_manager.iomanager method)": [[14, "night_horizons.io_manager.IOManager.get_checkpoint_filepatterns"]], "get_connection() (night_horizons.io_manager.iomanager method)": [[14, "night_horizons.io_manager.IOManager.get_connection"]], "get_output_filepaths() (night_horizons.io_manager.iomanager method)": [[14, "night_horizons.io_manager.IOManager.get_output_filepaths"]], "load_from_checkpoint() (night_horizons.io_manager.iomanager method)": [[14, "night_horizons.io_manager.IOManager.load_from_checkpoint"]], "load_from_checkpoint() (night_horizons.io_manager.mosaiciomanager method)": [[14, "night_horizons.io_manager.MosaicIOManager.load_from_checkpoint"]], "night_horizons.io_manager": [[14, "module-night_horizons.io_manager"]], "open_dataset() (night_horizons.io_manager.mosaiciomanager method)": [[14, "night_horizons.io_manager.MosaicIOManager.open_dataset"]], "save_settings() (night_horizons.io_manager.iomanager method)": [[14, "night_horizons.io_manager.IOManager.save_settings"]], "save_to_checkpoint() (night_horizons.io_manager.iomanager method)": [[14, "night_horizons.io_manager.IOManager.save_to_checkpoint"]], "save_to_checkpoint() (night_horizons.io_manager.mosaiciomanager method)": [[14, "night_horizons.io_manager.MosaicIOManager.save_to_checkpoint"]], "search_and_load_checkpoint() (night_horizons.io_manager.iomanager method)": [[14, "night_horizons.io_manager.IOManager.search_and_load_checkpoint"]], "search_for_checkpoint() (night_horizons.io_manager.iomanager method)": [[14, "night_horizons.io_manager.IOManager.search_for_checkpoint"]], "assert_approx_equal() (in module night_horizons.metrics)": [[15, "night_horizons.metrics.assert_approx_equal"]], "image_to_image_ccoeff() (in module night_horizons.metrics)": [[15, "night_horizons.metrics.image_to_image_ccoeff"]], "night_horizons.metrics": [[15, "module-night_horizons.metrics"]], "metadataprocessor (class in night_horizons.pipeline)": [[16, "night_horizons.pipeline.MetadataProcessor"]], "mosaicmaker (class in night_horizons.pipeline)": [[16, "night_horizons.pipeline.MosaicMaker"]], "sequentialmosaicmaker (class in night_horizons.pipeline)": [[16, "night_horizons.pipeline.SequentialMosaicMaker"]], "stage (class in night_horizons.pipeline)": [[16, "night_horizons.pipeline.Stage"]], "create_stage() (in module night_horizons.pipeline)": [[16, "night_horizons.pipeline.create_stage"]], "night_horizons.pipeline": [[16, "module-night_horizons.pipeline"]], "register_default_preprocessors() (night_horizons.pipeline.mosaicmaker method)": [[16, "night_horizons.pipeline.MosaicMaker.register_default_preprocessors"]], "register_default_preprocessors() (night_horizons.pipeline.sequentialmosaicmaker method)": [[16, "night_horizons.pipeline.SequentialMosaicMaker.register_default_preprocessors"]], "register_default_processors() (night_horizons.pipeline.mosaicmaker method)": [[16, "night_horizons.pipeline.MosaicMaker.register_default_processors"]], "register_default_processors() (night_horizons.pipeline.sequentialmosaicmaker method)": [[16, "night_horizons.pipeline.SequentialMosaicMaker.register_default_processors"]], "register_default_services() (night_horizons.pipeline.mosaicmaker method)": [[16, "night_horizons.pipeline.MosaicMaker.register_default_services"]], "register_default_services() (night_horizons.pipeline.sequentialmosaicmaker method)": [[16, "night_horizons.pipeline.SequentialMosaicMaker.register_default_services"]], "register_default_services() (night_horizons.pipeline.stage method)": [[16, "night_horizons.pipeline.Stage.register_default_services"]], "register_default_train_services() (night_horizons.pipeline.sequentialmosaicmaker method)": [[16, "night_horizons.pipeline.SequentialMosaicMaker.register_default_train_services"]], "register_fundamental_services() (night_horizons.pipeline.stage method)": [[16, "night_horizons.pipeline.Stage.register_fundamental_services"]], "run() (night_horizons.pipeline.metadataprocessor method)": [[16, "night_horizons.pipeline.MetadataProcessor.run"]], "run() (night_horizons.pipeline.mosaicmaker method)": [[16, "night_horizons.pipeline.MosaicMaker.run"]], "run() (night_horizons.pipeline.sequentialmosaicmaker method)": [[16, "night_horizons.pipeline.SequentialMosaicMaker.run"]], "validate() (night_horizons.pipeline.stage method)": [[16, "night_horizons.pipeline.Stage.validate"]], "datasetwrapper (class in night_horizons.raster)": [[17, "night_horizons.raster.DatasetWrapper"]], "image (class in night_horizons.raster)": [[17, "night_horizons.raster.Image"]], "referencedimage (class in night_horizons.raster)": [[17, "night_horizons.raster.ReferencedImage"]], "add_to_folium_map() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.add_to_folium_map"]], "cart_bounds (night_horizons.raster.referencedimage property)": [[17, "night_horizons.raster.ReferencedImage.cart_bounds"]], "convert_cart_to_pixel() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.convert_cart_to_pixel"]], "convert_pixel_to_cart() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.convert_pixel_to_cart"]], "dataset_io (night_horizons.raster.referencedimage attribute)": [[17, "night_horizons.raster.ReferencedImage.dataset_io"]], "des (night_horizons.raster.image property)": [[17, "night_horizons.raster.Image.des"]], "get_bounds() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.get_bounds"]], "get_cart_coordinates() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.get_cart_coordinates"]], "get_features() (night_horizons.raster.image method)": [[17, "night_horizons.raster.Image.get_features"]], "get_image() (night_horizons.raster.datasetwrapper method)": [[17, "night_horizons.raster.DatasetWrapper.get_image"]], "get_img_int_from_img() (night_horizons.raster.image method)": [[17, "night_horizons.raster.Image.get_img_int_from_img"]], "get_nonzero_mask() (night_horizons.raster.image method)": [[17, "night_horizons.raster.Image.get_nonzero_mask"]], "get_pixel_coordinates() (night_horizons.raster.image method)": [[17, "night_horizons.raster.Image.get_pixel_coordinates"]], "get_pixel_coordinates() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.get_pixel_coordinates"]], "get_pixel_widths() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.get_pixel_widths"]], "get_semitransparent_img() (night_horizons.raster.image method)": [[17, "night_horizons.raster.Image.get_semitransparent_img"]], "get_semitransparent_img_int() (night_horizons.raster.image method)": [[17, "night_horizons.raster.Image.get_semitransparent_img_int"]], "img (night_horizons.raster.image property)": [[17, "night_horizons.raster.Image.img"]], "img_int (night_horizons.raster.image property)": [[17, "night_horizons.raster.Image.img_int"]], "img_shape (night_horizons.raster.image property)": [[17, "night_horizons.raster.Image.img_shape"]], "img_shape (night_horizons.raster.referencedimage property)": [[17, "night_horizons.raster.ReferencedImage.img_shape"]], "io (night_horizons.raster.datasetwrapper attribute)": [[17, "night_horizons.raster.DatasetWrapper.io"]], "io (night_horizons.raster.image attribute)": [[17, "night_horizons.raster.Image.io"]], "io (night_horizons.raster.referencedimage attribute)": [[17, "night_horizons.raster.ReferencedImage.io"]], "kp (night_horizons.raster.image property)": [[17, "night_horizons.raster.Image.kp"]], "latlon_bounds (night_horizons.raster.referencedimage property)": [[17, "night_horizons.raster.ReferencedImage.latlon_bounds"]], "night_horizons.raster": [[17, "module-night_horizons.raster"]], "open() (night_horizons.raster.datasetwrapper class method)": [[17, "night_horizons.raster.DatasetWrapper.open"]], "open() (night_horizons.raster.image class method)": [[17, "night_horizons.raster.Image.open"]], "open() (night_horizons.raster.referencedimage class method)": [[17, "night_horizons.raster.ReferencedImage.open"]], "plot_bounds() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.plot_bounds"]], "plot_kp() (night_horizons.raster.image method)": [[17, "night_horizons.raster.Image.plot_kp"]], "plot_kp() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.plot_kp"]], "save() (night_horizons.raster.image method)": [[17, "night_horizons.raster.Image.save"]], "save() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.save"]], "save_image() (night_horizons.raster.datasetwrapper method)": [[17, "night_horizons.raster.DatasetWrapper.save_image"]], "semitransparent_img (night_horizons.raster.image property)": [[17, "night_horizons.raster.Image.semitransparent_img"]], "semitransparent_img_int (night_horizons.raster.image property)": [[17, "night_horizons.raster.Image.semitransparent_img_int"]], "set_projections() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.set_projections"]], "show() (night_horizons.raster.image method)": [[17, "night_horizons.raster.Image.show"]], "show() (night_horizons.raster.referencedimage method)": [[17, "night_horizons.raster.ReferencedImage.show"]], "night_horizons.transformers": [[18, "module-night_horizons.transformers"]], "altitudefilter (class in night_horizons.transformers.filters)": [[19, "night_horizons.transformers.filters.AltitudeFilter"]], "filter (class in night_horizons.transformers.filters)": [[19, "night_horizons.transformers.filters.Filter"]], "queryfilter (class in night_horizons.transformers.filters)": [[19, "night_horizons.transformers.filters.QueryFilter"]], "steadyfilter (class in night_horizons.transformers.filters)": [[19, "night_horizons.transformers.filters.SteadyFilter"]], "fit() (night_horizons.transformers.filters.filter method)": [[19, "night_horizons.transformers.filters.Filter.fit"]], "fit() (night_horizons.transformers.filters.queryfilter method)": [[19, "night_horizons.transformers.filters.QueryFilter.fit"]], "night_horizons.transformers.filters": [[19, "module-night_horizons.transformers.filters"]], "transform() (night_horizons.transformers.filters.filter method)": [[19, "night_horizons.transformers.filters.Filter.transform"]], "transform() (night_horizons.transformers.filters.queryfilter method)": [[19, "night_horizons.transformers.filters.QueryFilter.transform"]], "ordertransformer (class in night_horizons.transformers.order)": [[20, "night_horizons.transformers.order.OrderTransformer"]], "sensoranddistanceorder (class in night_horizons.transformers.order)": [[20, "night_horizons.transformers.order.SensorAndDistanceOrder"]], "fit() (night_horizons.transformers.order.ordertransformer method)": [[20, "night_horizons.transformers.order.OrderTransformer.fit"]], "fit() (night_horizons.transformers.order.sensoranddistanceorder method)": [[20, "night_horizons.transformers.order.SensorAndDistanceOrder.fit"]], "night_horizons.transformers.order": [[20, "module-night_horizons.transformers.order"]], "transform() (night_horizons.transformers.order.ordertransformer method)": [[20, "night_horizons.transformers.order.OrderTransformer.transform"]], "transform() (night_horizons.transformers.order.sensoranddistanceorder method)": [[20, "night_horizons.transformers.order.SensorAndDistanceOrder.transform"]], "geotiffpreprocessor (class in night_horizons.transformers.preprocessors)": [[21, "night_horizons.transformers.preprocessors.GeoTIFFPreprocessor"]], "nitelitepreprocessor (class in night_horizons.transformers.preprocessors)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor"]], "nitelitepreprocessor135 (class in night_horizons.transformers.preprocessors)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor135"]], "nitelitepreprocessor145 (class in night_horizons.transformers.preprocessors)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor145"]], "fit() (night_horizons.transformers.preprocessors.geotiffpreprocessor method)": [[21, "night_horizons.transformers.preprocessors.GeoTIFFPreprocessor.fit"]], "fit() (night_horizons.transformers.preprocessors.nitelitepreprocessor method)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor.fit"]], "get_logs() (night_horizons.transformers.preprocessors.nitelitepreprocessor method)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor.get_logs"]], "load_gps_log() (night_horizons.transformers.preprocessors.nitelitepreprocessor135 method)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor135.load_gps_log"]], "load_gps_log() (night_horizons.transformers.preprocessors.nitelitepreprocessor145 method)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor145.load_gps_log"]], "load_img_log() (night_horizons.transformers.preprocessors.nitelitepreprocessor135 method)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor135.load_img_log"]], "load_img_log() (night_horizons.transformers.preprocessors.nitelitepreprocessor145 method)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor145.load_img_log"]], "load_imu_log() (night_horizons.transformers.preprocessors.nitelitepreprocessor135 method)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor135.load_imu_log"]], "load_imu_log() (night_horizons.transformers.preprocessors.nitelitepreprocessor145 method)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor145.load_imu_log"]], "night_horizons.transformers.preprocessors": [[21, "module-night_horizons.transformers.preprocessors"]], "transform() (night_horizons.transformers.preprocessors.geotiffpreprocessor method)": [[21, "night_horizons.transformers.preprocessors.GeoTIFFPreprocessor.transform"]], "transform() (night_horizons.transformers.preprocessors.nitelitepreprocessor method)": [[21, "night_horizons.transformers.preprocessors.NITELitePreprocessor.transform"]], "baseimagetransformer (class in night_horizons.transformers.raster)": [[22, "night_horizons.transformers.raster.BaseImageTransformer"]], "cleanimagetransformer (class in night_horizons.transformers.raster)": [[22, "night_horizons.transformers.raster.CleanImageTransformer"]], "logscaleimagetransformer (class in night_horizons.transformers.raster)": [[22, "night_horizons.transformers.raster.LogscaleImageTransformer"]], "passimagetransformer (class in night_horizons.transformers.raster)": [[22, "night_horizons.transformers.raster.PassImageTransformer"]], "rastercoordinatetransformer (class in night_horizons.transformers.raster)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer"]], "check_bounds() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.check_bounds"]], "fit() (night_horizons.transformers.raster.baseimagetransformer method)": [[22, "night_horizons.transformers.raster.BaseImageTransformer.fit"]], "fit() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.fit"]], "fit_to_dataset() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.fit_to_dataset"]], "handle_out_of_bounds() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.handle_out_of_bounds"]], "night_horizons.transformers.raster": [[22, "module-night_horizons.transformers.raster"]], "physical_to_pixel() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.physical_to_pixel"]], "pixel_to_physical() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.pixel_to_physical"]], "set_fit_request() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.set_fit_request"]], "set_transform_request() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.set_transform_request"]], "transform() (night_horizons.transformers.raster.baseimagetransformer method)": [[22, "night_horizons.transformers.raster.BaseImageTransformer.transform"]], "transform() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.transform"]], "transform_image() (night_horizons.transformers.raster.baseimagetransformer method)": [[22, "night_horizons.transformers.raster.BaseImageTransformer.transform_image"]], "transform_image() (night_horizons.transformers.raster.cleanimagetransformer method)": [[22, "night_horizons.transformers.raster.CleanImageTransformer.transform_image"]], "transform_image() (night_horizons.transformers.raster.logscaleimagetransformer method)": [[22, "night_horizons.transformers.raster.LogscaleImageTransformer.transform_image"]], "transform_image() (night_horizons.transformers.raster.passimagetransformer method)": [[22, "night_horizons.transformers.raster.PassImageTransformer.transform_image"]], "transform_to_physical() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.transform_to_physical"]], "transform_to_pixel() (night_horizons.transformers.raster.rastercoordinatetransformer method)": [[22, "night_horizons.transformers.raster.RasterCoordinateTransformer.transform_to_pixel"]], "loggermixin (class in night_horizons.utils)": [[23, "night_horizons.utils.LoggerMixin"]], "looploggermixin (class in night_horizons.utils)": [[23, "night_horizons.utils.LoopLoggerMixin"]], "referencedrawsplitter (class in night_horizons.utils)": [[23, "night_horizons.utils.ReferencedRawSplitter"]], "stdoutlogger (class in night_horizons.utils)": [[23, "night_horizons.utils.StdoutLogger"]], "check_columns() (in module night_horizons.utils)": [[23, "night_horizons.utils.check_columns"]], "check_df_input() (in module night_horizons.utils)": [[23, "night_horizons.utils.check_df_input"]], "check_filepaths_input() (in module night_horizons.utils)": [[23, "night_horizons.utils.check_filepaths_input"]], "deep_merge() (in module night_horizons.utils)": [[23, "night_horizons.utils.deep_merge"]], "discover_data() (in module night_horizons.utils)": [[23, "night_horizons.utils.discover_data"]], "enable_passthrough() (in module night_horizons.utils)": [[23, "night_horizons.utils.enable_passthrough"]], "flush() (night_horizons.utils.stdoutlogger method)": [[23, "night_horizons.utils.StdoutLogger.flush"]], "get_distance() (in module night_horizons.utils)": [[23, "night_horizons.utils.get_distance"]], "get_logger() (in module night_horizons.utils)": [[23, "night_horizons.utils.get_logger"]], "get_method_parameters() (in module night_horizons.utils)": [[23, "night_horizons.utils.get_method_parameters"]], "load_image() (in module night_horizons.utils)": [[23, "night_horizons.utils.load_image"]], "log (night_horizons.utils.loggermixin property)": [[23, "night_horizons.utils.LoggerMixin.log"]], "night_horizons.utils": [[23, "module-night_horizons.utils"]], "start_logging() (night_horizons.utils.loggermixin method)": [[23, "night_horizons.utils.LoggerMixin.start_logging"]], "start_logging() (night_horizons.utils.looploggermixin method)": [[23, "night_horizons.utils.LoopLoggerMixin.start_logging"]], "stop_logging() (night_horizons.utils.loggermixin method)": [[23, "night_horizons.utils.LoggerMixin.stop_logging"]], "store_parameters() (in module night_horizons.utils)": [[23, "night_horizons.utils.store_parameters"]], "train_test_production_split() (night_horizons.utils.referencedrawsplitter method)": [[23, "night_horizons.utils.ReferencedRawSplitter.train_test_production_split"]], "update_log() (night_horizons.utils.loggermixin method)": [[23, "night_horizons.utils.LoggerMixin.update_log"]], "update_row() (in module night_horizons.utils)": [[23, "night_horizons.utils.update_row"]], "write() (night_horizons.utils.stdoutlogger method)": [[23, "night_horizons.utils.StdoutLogger.write"]], "write_log() (night_horizons.utils.looploggermixin method)": [[23, "night_horizons.utils.LoopLoggerMixin.write_log"]]}})